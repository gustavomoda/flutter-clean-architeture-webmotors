// Mocks generated by Mockito 5.1.0 from annotations
// in gmodawebmotor/test/units/features/presentation/controller/vehicles_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:gmodawebmotor/src/features/vehicles/domain/entities/vehicle.dart'
    as _i6;
import 'package:gmodawebmotor/src/features/vehicles/domain/services/vehicles.dart'
    as _i2;
import 'package:gmodawebmotor/src/features/vehicles/domain/usecases/get_veichiles.dart'
    as _i4;
import 'package:logger/logger.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeVehicleService_0 extends _i1.Fake implements _i2.VehicleService {}

class _FakeLogger_1 extends _i1.Fake implements _i3.Logger {}

/// A class which mocks [GetVehicles].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetVehicles extends _i1.Mock implements _i4.GetVehicles {
  MockGetVehicles() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.VehicleService get service =>
      (super.noSuchMethod(Invocation.getter(#service),
          returnValue: _FakeVehicleService_0()) as _i2.VehicleService);
  @override
  _i3.Logger get logger => (super.noSuchMethod(Invocation.getter(#logger),
      returnValue: _FakeLogger_1()) as _i3.Logger);
  @override
  int get page =>
      (super.noSuchMethod(Invocation.getter(#page), returnValue: 0) as int);
  @override
  set page(int? _page) => super.noSuchMethod(Invocation.setter(#page, _page),
      returnValueForMissingStub: null);
  @override
  bool get noMoreRecords =>
      (super.noSuchMethod(Invocation.getter(#noMoreRecords), returnValue: false)
          as bool);
  @override
  set noMoreRecords(bool? _noMoreRecords) =>
      super.noSuchMethod(Invocation.setter(#noMoreRecords, _noMoreRecords),
          returnValueForMissingStub: null);
  @override
  _i5.Future<List<_i6.Vehicle>> startFetch() =>
      (super.noSuchMethod(Invocation.method(#startFetch, []),
              returnValue: Future<List<_i6.Vehicle>>.value(<_i6.Vehicle>[]))
          as _i5.Future<List<_i6.Vehicle>>);
  @override
  _i5.Future<List<_i6.Vehicle>> fetchMore() =>
      (super.noSuchMethod(Invocation.method(#fetchMore, []),
              returnValue: Future<List<_i6.Vehicle>>.value(<_i6.Vehicle>[]))
          as _i5.Future<List<_i6.Vehicle>>);
}
